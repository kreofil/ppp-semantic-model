#ifndef __context__
#define __context__
// context.h
// Объявление обобщенного контекста, используемого в семантической модели,
// а также прототипов обобщенных функций, обеспечивающих его обработку

#include <stdio.h>
#include "variable.h"

//==============================================================================
// Обобщенный контекст
//==============================================================================
typedef struct Context {}<> Context;

//------------------------------------------------------------------------------
// Обобщенная функция отладочного вывода содержимого контекста
void DebugOutOfContext<struct Context* context>(FILE* file);

//==============================================================================
// Специализация контекста константы
//==============================================================================
Context + <Const: Constant*;>;
Context + <Var: Variable*;>;

//------------------------------------------------------------------------------
// Функция вывода значения контекста константы
void DebugOutOfContext<Context.Const* context>(FILE* file);

// Функция, создающая контекст для именованной целочисленной константы
Context* CreateContextConstInt(int value);

//------------------------------------------------------------------------------
// Функция вывода контекста переменной
void DebugOutOfContext<Context.Var* context>(FILE* file);

// Функция создающая контекст для любой переменной,
// подключаемой к этому контексту
Context* CreateContextVar(Variable* variable);

#endif // __context__
